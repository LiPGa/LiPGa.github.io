[{"authors":["admin"],"categories":null,"content":"I am currently a Master student in the College of Computing and Information Science at Cornell University. Previously, I graduated from the Department of Computer Science and Engineering of Shanghai Jiao Tong University.\nI am passionate about applying technology (Software Engineering, Data Science and HCI) to solve real-world problems and provide better experience for people.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am currently a Master student in the College of Computing and Information Science at Cornell University. Previously, I graduated from the Department of Computer Science and Engineering of Shanghai Jiao Tong University.\nI am passionate about applying technology (Software Engineering, Data Science and HCI) to solve real-world problems and provide better experience for people.","tags":null,"title":"Lingjia Li","type":"authors"},{"authors":["Lingjia Li","Jian Cao*","Qing Qi"],"categories":null,"content":"","date":1638835200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1638835200,"objectID":"a01ae6e370aa7963184a17266d2ff0ac","permalink":"/publication/monitoring-nse/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/monitoring-nse/","section":"publication","summary":"An approach to detect Negative Sentiment-related Events (NSE) is proposed and the factors that have an influence on NSEs in the OSS project are studied.","tags":["Sentiment analysis","Negative Sentiment-related Events","Mining software repositories"],"title":"Monitoring Negative Sentiment-related Events in Open Source Software Projects","type":"publication"},{"authors":["Lingjia Li","Jian Cao*","David Lo"],"categories":null,"content":"","date":1594684800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594684800,"objectID":"139c4f27e726982f87e30fb520e469fa","permalink":"/publication/sentiment-analysis/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/sentiment-analysis/","section":"publication","summary":"We apply sentiment analysis and statistical analysis on collaboration artifacts over five projects on GitHub. These findings can be applied to develop better OSS project monitoring tools and improve project management by taking developers' sentiments during collaborations into consideration.","tags":["Sentiment analysis","Human factors","GitHub","Collaborative and social computing","Project management"],"title":"Sentiment Analysis over Collaborative Relationships in Open Source Software Projects","type":"publication"},{"authors":null,"categories":["Design"],"content":"Background The process of searching perfumes and purchasing perfume are seperated from each other. The perfume shopping website does not provide much detailed product information, such as the front, middle, and back notes, perfumers, etc. Similarly, perfume review site do not provide functionalities like navigation to the shopping page.\n As a user who want to buy perfumes but are not familiar with them, I have to go to perfume review websites like Nosetime or Xiaohongshu to look for a perfume that I like. However, if I have decided what to buy, I have to search again on shopping website like Taobao.\n There is no specific perfume shopping website on the market, which brings a lot of trouble to users\u0026rsquo; demands. Therefore, this perfume searching and shopping site is designed and developed to meet the personalized purchase needs of users by integrated and all-round information.\n User could search perfumes by text and image. User could be navigated to the shopping site in the result page. User could combine different features to dig out favourite product.  The text searching function is implemented through Apache Lucene. The image recognition is implemented using ORB operator and brute force matcher provided by OpenCV.\nInterface Menu Page: Search by Text: Search by Image: Muti-field Search: Search Result: More Features  Leverage regular crawlers of Taobao and Nosetime to collect information on a daily basis to keep the database information up-to-date. Fuzzy Search to improve the robustness of the seaching function. Offer suggestions based on search and web history before user finish typing. Price prediction, personalized product recommendation based on the data collected.  ","date":1578182400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578182400,"objectID":"8163f66bbd898a0a7057a2fca6b8ff6a","permalink":"/project/perfume/","publishdate":"2020-01-05T00:00:00Z","relpermalink":"/project/perfume/","section":"project","summary":"Perfume search site that integrates shopping and perfume information üíê","tags":["Other"],"title":"Perfume search engine","type":"project"},{"authors":null,"categories":["Work Sample"],"content":"Background: What is Prophet? Prophet is a knowledge portal taht collects resources from various sources of multiple formats within the firm.\nIt also make knowledge indexed and connected, to facilitate future ad hoc tasks, new hire training, NPA analysis, etc.\nIts target user is all employees within the firm.\nFunctionalities Serach and Upload the Knowledge  Imagine you are an employee working on a new project, you may turn to many data sources for references\u0026hellip;\n Current Problems  Information is scattered everywhere. You will have to repeatedly type in keywords at each source. Online materials are not enough/available. In daily work scenes, e-mails generally contain valuable information. However, they are stored privately at local, thus being hard to share with others.  Solutions:  With Prophet, you can find everything with just one click at one place. Prophet leverages a web crawler, which collects materials from sources and stores them in an integrated repository. Prophet provide such work flow:  graph LR id5(Crawl) --\u0026gt; id2(Detect) id1(Upload) --\u0026gt; id2(Detect) --\u0026gt; id3(Parse) --\u0026gt; id4(Index)   The parsing strategies are adaptive to the detected file types (supporting PDF, doc/docx, json, e-mail etc.) A content management portal is designed and implemented for Prophet, where users could search and manage resources in a Directory structure.  Share knowledge: in a centralized way  Suppose you have obtained necessary knowledge, you may want to categorize them into several groups and start a collaboration with others based on these materials\u0026hellip;\n Current Problems  No methods to cluster related documents across different data sources. Inconvenient to share the knowledge groups/clusters with others.  Solutions  Prophet provides the interfaces to leverage Channel, where users can create and add any type of materials. Users could publish and share the channels they create to certain user groups, thus facilitating collaboration. Users can search and subscribe specific public channels, since all channels are indexed in ElasticSearch.  Link domain resources: Clustering and Advise  Suppose you have categorized and launched the collaboration successfully, you may need more knowledge that you have not noticed\u0026hellip;\n Current Problems  Not able to connect heterogeneous resources together Hard to explore more materials based on the knowledge already collected  Solutions  In Prophet, knowledge is linked together by document similarity and auto-detected relationships rather than scattered randomly. User could create derived knowledge, such as Diagram, Channel, Data grid, etc. Therefore, Prophet could connect relevant knowledge from one starting point.  For example, starting from a system diagram, users can be linked to the feed data used by the system, which can be then related to the Jive documents and Jira items. The feed data can also be collected by channels and data grids, and from channels users can further access related documents and e-mails.\nSummary: What does Prophet do? Knowledge Gathering Prophet gathers informaiton in various formats from scattered sources, ranging from online portals to local sources. Then it parses and indexes information to a centralized repository.\nKnowledge Linkage Prophet establishes connection among knowledge based on auto-detected relationships as well as content similarity.\nKnowledge Sharing Knowledge Sharing is achieved both in distributed and centralized ways. For the distributed way, user could upload local materials, which are indexed to repository thus being achievable for others. Users could also share in a centralized way, where channels are created for futher searching, subscribing and editing.\nSome use cases  New hire training: Enable the creation of a bunch of indexed training materials to group meaningful information (like e-mails, jira,jive, twiki and local documents) altogether in a targeted manner so that new hires can get familiar to the business in a shorter learning curve. Launch a project: Developers could use channel to sync up their working progress. Project Managers and Business Analyst may need all the Jira items for the information of the requirements and progress details.  Further Enhancements  Enable more data sources. Improve similarity algorithm: Machine learning and Deep Learning models can be leveraged to evaluate the document similarity with more efficiency. Visualize the linkage: Complex relationships should be visualized through a graph, so that users can get an intuitive and general understanding of the knowledge they are interested in.  ","date":1578182400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1578182400,"objectID":"da6e518d23208d2b1afa3d0f7179eef8","permalink":"/post/prophet/","publishdate":"2020-01-05T00:00:00Z","relpermalink":"/post/prophet/","section":"post","summary":"Gather, connect and share knowledge within the firm.","tags":["website"],"title":"Prophet: A Knowledge Portal","type":"post"},{"authors":null,"categories":["Work Sample","Design"],"content":"Purpose With the rapid development of mobile applicationsÔºåAndroid‚Äîbased mobile applications constantly innovationÔºåvarious Android application store in the number of applications is increasingÔºéBut how to use innovative applications to help people with disabilitiesÔºåis currently a major focus of the problem. Nowadays, apps designed to meet the special needs of blind people are restricted in numbers, and our project‚Äì‚ÄúSeeing eye dog‚Äù is targeted at such need to offer a third eye for the blind people.\nLogo Our app name is Seeing-eye dog, which means it is a good friend of the blind people.\nThe four circles stand for the four members of our group. It also represents the all-round communication and travel of blind people with the help of our app. \u0026ldquo;The third eye for the blind\u0026rdquo; is our motto.\nPlatform and Development environment  Android 7.0 Android Studio 2.3.2  Function Implementation graph LR id1(applying sdk) --\u0026gt; id2(location) id3(voice input) --\u0026gt; id4(navigation) id2 --\u0026gt; id5(vibration output) id4 --\u0026gt; id5  Location and navigation There is one advantage of mobile device over PC is that it can be taken with you easily. Therefore, LBS, short for Location Based Service is a technology almost only available on mobile phones. The core of LBS is to locate users. There are mainly two ways to achieve this goal, that is, through GPS and through WiFi. The Ô¨Årst method is based on the interaction of GPS hardware inside our phones and satellites. Users can be located precisely in this way but it is only useful outdoors. The second method depends on three base-stations to determine the velocity and then calculate the positon. This way is less accurate but is available both indoors and outdoors. Although android has provided corresponding API support for both two ways, there are some problems in practice. To improve accuracy as well as save time, we choose the third way, using SDK of third companies (AMAP). The procedure is applying API Key first, then preparing LBS SDK, and Ô¨Ånally we can design our own application.\ngraph LR id1(apply API key) --\u0026gt; id2(Prepare LBS SDK) --\u0026gt; id3(design application)  Then if all of them are accepted, we can begin our location. We call some inside method to get latitude and longitude, as well as the exact city and road to tell users where they are in a more acceptable way. The time interval is used to set interval of two location, through which we can change our position synchronous in the map and get information of the whole trail we have moved visualized.\nOnce user presses the left button, a complete map will be showed; if user presses the right one, the application will turn back to the main interface. In the map before, user can zoom in and out by sliding their fingers or pressing \u0026ldquo;+\u0026rdquo; or \u0026ldquo;-\u0026quot;.\nVoice Recognition This function is fulfilled to assist the blind as well as other users to locate their destinations with higher speed and more convenience. Through the calling of Hearing Fei voice SDKÔºåaccurate and efficient voice recognition is accomplished.\nTo provide vivid and real-time interactive experience,\nThe result is satisfactory for the high accuracy and vivid interface.\nVibration Output This function is specially designed for blind people. The blind people boasts sensitive tactile and auditory. However, because of the noise generated by busy traffic on the road, it is practically rather difficult for the blind people to know their location and identify their environment through apps simply by their hearing. For example, if simply focusing on the app wearing a headphone, it is difficult for them to identify the horns of vehicles, which may otherwise be useful for them to navigate for some safety concern.\nTo solve this problem, vibration is adopted in our APP, for its in-time and noise proof advantages, which perfectly fits in with the features and demands of blind users. To be specific, the method of difference-vibration is implemented:  Short vibration:  Waiting time:1s Lasting time:0.05s   Long vibration:  Waiting time:1s Lasting time:1s The vibration can achieve its peak.    UI design Since the users are divided into 2 groups ‚Äî blind and normal people. Ways of input includes typing input and voice-input. Their texts are all clearly replaced by icon buttons, to make the interface more attractive, some additional decorations are rejected to make the interface more user-friendly. In the lower right hand corner is our app logo and in the lower left hand corner is user‚Äôs command and it also supports voice-input.\nMain interface \u0026amp; Position track Voice recognition Conclusions Our completion of the final project, thanks to the joint effort, is satisfying. We accomplished following features:\n Navigation function via Amap and location sdk. Voice recognition and vibration output to receive and deliver information.  This is our first time to experience android development, and naturally, this project has a lot to improve:\n Without voice output, it is still not convenient enough to use ‚ÄùSeeing Eye dog‚Äù. The functions are limited in numbers and could be made more diverse, such as travel sharing, etc.  Summary and Future perspectives Through this project, we have fully experienced the fun and sense of achievements of accomplishing an visible outcome and fall in love with android development. Limited by the time, many additional functions are not be able to implemented. If added, \u0026ldquo;Seeing-Eye dog\u0026rdquo; app will undoubtedly have more practical use and enrich the life of the user groups to a larger degree. We hope to have the opportunity to turn these functions into realities in the future.\n  More services closely related to the life of the blind can be added. For example, the restaurants and entertainment facilities nearby to enrich the otherwise dull life of the blind people.\n  Personally made service can be added to be more intellect, and suit users‚Äô demands better.\n  Share function can be added to enable the blind to share their travelling path among their friends and families\n  To sum up, technology will improve and enrich people‚Äôs life. We should tap the potential of the technology to make more products better satisfying the special need of those underprivileged who have long been easily ignored. And only by doing so, can the technology be made full use of, thus eventually changing the world into a better place for all humanity.\n","date":1577664000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577664000,"objectID":"5d1fa307988306523e3a701daa1dcc1d","permalink":"/post/android/","publishdate":"2019-12-30T00:00:00Z","relpermalink":"/post/android/","section":"post","summary":"Seeing-eye Dog: The third eye for the blind people","tags":["APP"],"title":"Voice Navigation APP for Blind User","type":"post"},{"authors":null,"categories":["Design"],"content":"Introduction On GitHub, issue reports are used by team members to ask for advice, and express and share opinions related to software maintenance and evolution. Issue data can be mined to explore developers emotions, sentiments and politeness\u0026mdash;affects for short.\n It is becoming apparent that emotion awareness, awareness of one's own emotions and those of others, is crucial for a software company and for many stakeholders involved in the software development lifecycle.\n It is important to improve Emotion or Sentiment awareness in Open Source Software developments. Although monitoring systmes for emotion phenomena detection has been studied in social media, there is no studies on tools to monitor sentiment phenomena in software development communities.\nThis design could provide an alternative view to evaluate the health status of open source software projects (from a social and pshychological point of view).\nWorkflow  All the data is automatically collected using REST API v3. Sentiment Analysis is performed using SentiCR and an SE-specific sentiment lexicon. Burst detection is implemented through Kleinburg model and Event extraction is fulfilled through LDA Topic extraction.  Data Analysis and Visualization Visualization of sentiment status of all the commit comments in a given repository (individual work):\nVisualization of all the issue comments in a given repository (collaborative work):\nThese two graphs can provide a general idea of the sentiment status of the project by simply displaying the generated time series and summary information. Based on them, I further design some interfaces for the sentiment monitoring system.\nExamples  As the Project Manager, I want to know whether there is a burst of a certain sentiment and what events lead to such sentiment phenomena.\n Prototype of Burst Detection and Event Extraction:\n Detected events could link to corresponding GitHub pages, enabling user to know details of the event. User could select a specific time period and the system will detect sentiment burst and related events during this period. Typical comments will also be listed with sentiment score and keywords displayed to the user. For better accuracy, user could adjust number of events to be detected by the model during the burst period. User could watch the project he/she is interested in. Whenever there is new detection, user could receive notifications.   As the Software Quality Assurance team member, I want to see the overall sentiment state of the project in the past period such as one week, one month, one year, etc., so that I can correlate it with other metrics, such as productivity, task quality, etc.\n Prototype of information visualization and summary on a given time period:\n Enabling sliding window for adaptive visualization. Provide selection on time period and look for database or automatically collect data during that period from GitHub. Provide issue and commit comment data summary. Automatically compare the result with the summary over the last period. Give advice based on some embeded knowledge. (e.g, Since research has found that positive sentiment can reduce issue resolution time, the system can help QA team member to evaluate productivity accordingly.)  ","date":1577404800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577404800,"objectID":"028a9c454d4fa495fbc61ac467155e1f","permalink":"/project/sentiment/","publishdate":"2019-12-27T00:00:00Z","relpermalink":"/project/sentiment/","section":"project","summary":"Sentiment Visualization and Monitoring system for open source ecosystemüìà","tags":["Social computing","Visualization","Other"],"title":"Sentiment Monitoring","type":"project"},{"authors":null,"categories":["Work Sample"],"content":"Introduction Social media has revolutionized how humans create knowledge artifacts. It has increased individual engagement, broadened community participation and led to the formation of new social networks. A wide variety of Web services feature publicly articulated social networks. Often, the value users derive from these services depends on the quality and diversity of users\u0026rsquo; networks.\nFriendship is a socially loaded concept often used to establish a sense of community on personal social network sites, and it has been suggested that users can beneÔ¨Åt from connecting to new people and expanding their networks.\nWith the emergence of socially-enabled software repositories and collaborative development environments, it becomes increasingly meaningful to apply social network analysis techniques to this kind of rising field. In this project, we propose methods for :who to befriend\u0026rdquo; recommendations on GitHub and introduce the system we implement based on these methods.\nBackground In this section we give a brief introduction to the subject in our work, the GitHub site. It is a popular code repository site for a lot of well-known and active projects.\nPeople On the GitHub site, developers create proÔ¨Åles that can be optionally populated with identifying information including a gravatar (an image representing them throughout the site), their name, email address, organization, location, and webpage. A developer‚Äôs proÔ¨Åle is visible to other users and displays all the repositories that person is working on and a list of their latest activities on the site.\nCode artifacts GitHub currently hosts over one million code repositories, and has 340,000 registered contributors. While a majority of the projects on GitHub are single-developer code dumps, many are active multi-developer projects of signiÔ¨Åcant scale that have been running for some time. Each repository on GitHub has a dedicated project page that hosts the source code Ô¨Åles, commit history, open issues, and other data associated with the project. Developers can create permanent URLs to link to speciÔ¨Åc lines within a code Ô¨Åle. This functionality allows information about artifacts within the site to Ô¨Çow outside of the GitHub community to the web at large.\nActions Actions in GitHub occur when a person changes an artifact or interacts with another person through the site. These actions can be code-related, communication, or subscription. Actions on code or associated with code include committing, forking and submitting a pull request. Project owners can make commits, i.e. changes to the code, by directly modifying the contents of code Ô¨Åles. Developers without commit-rights to a project must fork a project, creating a personal copy of the code that they can change freely. They can then submit some or all of the changes to the original project by issuing a pull request. The project owner or another member with commit rights can then merge in their changes. Developers can also communicate around code-related actions by submitting a comment on a commit, an issue, or a pull request.\nMotivation It is of great importance to practice friends identiÔ¨Åcation or determination on GitHub for both technical and social reasons.\nTechnical Discovering friend relations in GitHub can help improve collaboration efficiency. It is useful to identify the friendships which have already exist in realistic so that project managers in practice can reassign developers by taking friend relation into consideration.\nSocial The friend determination functionality can serve as the extension of the social functionality of GitHub. On one side, it can help developers maintain and enhance relationships which have already been established. On the other hand, the functionality can help to recommend friends, construct friendships based on the extracted data on GitHub, so that developers can build brand new friendships based on the platform, which can undoubtedly improve their enjoyment not only at work but also from the user-experience point of view.\nSocial network services are acutely aware that users need friends to enjoy a social network, and so services like Facebook often recommend users to people.\nGitHub, as an open source software (OSS) development community, is specially featured as a volunteer-driven task community, where developers‚Äô enjoyment play a dominant role in developers‚Äô participants.\nHowever, to our knowledge, there is no friend determination or friend recommendation system specially designed for GitHub, or other online software development communities. Therefore, we propose our idea, and construct the friend recommendation system, named GitPal 3 , using the principles in follower recommendations as well as friend determination on other social platforms. We hope to put our system into realistic use, thus improving both the developing efficiency and user experience on GitHub.\nReferenced Methods Follower recommendation in GitHub Following/follower recommendations can be performed according to different strategies. It is common to divide them into three categories: behavioral, similarity, and network.\nSimilarity In real life, people tend to befriend those with similar sociodemographic characteristics and interests, a phenomenon called homophily. It stands to reason, then, that users might be interested in attending to people with similar interests. As a proxy for this, we use user-deÔ¨Åned ‚Äúperson tags‚Äù, which list users‚Äô interests, hobbies, and skills.\nBehavioral This recommendation type is based on already observed interaction between two people. For example, a person may have commented on code checked in by some other person or a person may have replied to a question (e.g., usage of library, report of bug, etc.) posted by someone in a discussion forum. Thus, based on the interaction between two people a follow recommendation can be made.\nNetwork The network based recommendation type can be based on various techniques. Collaborative Ô¨Åltering is a technique for recommending content to users based on other users with similar interest. Collaborative Ô¨Åltering techniques are commonly seen on e-commerce sites. Applied to our problem domain, if A watches the same software repositories as B, than A might be interested in following B because both share similar interests. Triadic closure is another concept for network based recommendation. Suppose three community members A, B, and C and social ties between A‚ÄìC and B‚ÄìC. As suggested by Granovetter, in most of these social structures, a triadic closure occurs such that A and B are likely to become friends (or connected to each other) the more they associate with C. Network centrality of various types of vertices in a graph can be computed to determine the relative importance of vertices (e.g., methods such as PageRank and HITS). In social networks, network centrality techniques can be used to estimate the importance of users. The application is, for example, expert recommendation.\nFriend recommendation in other social platforms Reciprocity is the concept in directed social networks that two actors are mutually connected to each other [7].\nTypically the friend recommendation in social network services like Facebook is done by looking for people who are connected to many of a user‚Äôs friends, reasoning that the user is likely to already know them. This intuition works well in an undirected social network. However, in a directed social network setting where both social and information relationships are found, the question of who to recommend a user to follow becomes more complicated.\nFurthermore, many social network services have access to much more information than the network structure: users supply details about their interests and background, and they provide clues about who interests them by choosing whose posts to read and respond to. This led us to ask what cues in a user‚Äôs proÔ¨Åle, behavior, and network might be most eÔ¨Äective in recommending people.\nConsidering all these diÔ¨Éculties, we include 4 more general heuristics to make our recommendations more applicable to GitHub.\nHeuristics Heuristic 1: People with similar interest domains are likely to be friends. In real life, people tend to befriend others with similar characteristics and interests, a phenomenon called homophily. This give us heuristics to build a personal tag for each user based on their activities in diÔ¨Äerent repositories and calculate their relevance for the subsequent friend recommendations.\nData extraction In our project, interest is defined as the number of user activities in repositories of this domain. The types of activities in our data sets are shown in Figure 8 (watch, mentioned, subscribed, referenced, closed, etc.).\nNetwork models Based on the extracted data, we construct the User-Repo Network where edges are the user's activities in the repository. It is an ordered pair $N = (V, E)$ where:\n$$ E := \\begin{cases}(p, q) \\in P_2 (V)~|~p~has~code~activities~in~q~\\end{cases}$$\nWe associate a weight to each edge of the network, which corresponds to the times of activities in the repository. The user-repo network is actually an information network rather than a social network since it reveals the global information of the interaction between users and repositories.\nThen we construct the User-Domain network, which is a network in which each node is a developer or a specific domain, and two nodes are connected if the the developer has activities in the domain. We associate a weight to each edge of the network, which corresponds to the times of activities in the domain. This is realized by relating each repository to several separate Domains based on the main programming language information of the repositories. We map the User-Repo Network to User-Domain Network based on the relations.\nData Processing For the query user, we find out his/her top 10 interest domains. For each candidate user in the list, we calculate their interest similarity by adding all the weights in each domain together and assign a diÔ¨Äerent weight to each domain based on its ranking in the query user‚Äôs interest list. We calculate the average value, which is then normalized through Min-Max approach to the range of $[0, 1]$.\nHeuristic 2: People with similar status levels are likely to be friends. As similarity, which depicts a user‚Äôs social characteristic, is found to be one of the most important categories in establishing friendship, we argue that similarity in social status can improve the possibilities for two users to be friends.\nHere we follow a social network analysis approach that is based on well established techniques including HITS and PageRank.\nIntroduced by Page and Brin, the PageRank algorithm for weighting web pages importance based on their links has gained popularity driven by its use in the Google search engine. The PageRank score of a web page p at iteration i can be computed by the following equation:\n$$PR(p,i) = \\frac{1-r}{T}+r\\sum_{q\\in K_p}\\frac{PR(q,i-1)}{|L_q|}$$\nIn this equation, r represents the probability that a web surfer would continue to surf (a.k.a. the damping factor), $T$ is the number of web pages in the database of the search engine, $K_p$ is the set of web pages that link to $p$, and $L_q$ is the set of web pages that $q$ links to.\nMany researches in social networks also adopt Pagerank to represent the centrality of actors in the global view of the network. Here the PageRank of each user in the follower network is calculated to characterize the authority, or status level of the user.\nNetwork models We construct the Follower Network in this part. The follower network is deÔ¨Åned as follows: Let V be the set of all developers in the data set, then the follower network N is an ordered pair $N = (V, E)$ where\n$$ E := \\begin{cases}(p, q) \\in P_2 (V)\\ | \\ p\\ follows\\ q\\end{cases}$$\nTo obtain relative similarity S(v; q) can be normalized to [0, 1] by dividing L(v)L(q) by the bigger pagerank value of node pair i.e,\n$$ StatusSimilarity(v;q) = \\frac{|L_v-L_q|}{max(L_v , L_q)} $$\nHeuristic 3: People of common organizations are likely to be friends. Actually, people who are friends offline often may not follow each other on Github. For example, they are best friends oÔ¨Ñine but they follow each other. However, there does exist some clue showing they may be friends. They both belong to the ‚ÄôADAPT‚Äô lab when they are in SJTU.\nIt is often the case that people who belong to the same organization is more likely to follow each other.\nTherefore, we can extract the organization data from users\u0026rsquo; proÔ¨Åle, as the red boxes 4 shows.Then we treat the data as a list and calculate the Jaccard similarity of two users.\n$$J(A,B)=\\frac{|A\\cap B|}{|A \\cup B|}$$\nAs in 4 shows, the organization of Frank is [Adapt], while Bill belongs to [Adapt,INK]. So the Jaccard can be easily calculated as the formula above and get the organization score as 0.5.\nHeuristic 4: People with common friends are likely to be friends. This heuristic is based on the weak tie hypothesis: if A is linked to both B and C, then there is a greater-than-chance probability that B and C are linked to each other.\nif we consider any two randomly selected individuals, such as A and B, from the set S = A, B, C, D, E, \u0026hellip;, of all persons with ties to either or both of them, then, for example, if A is strongly tied to both B and C, then according to probability arguments, the B-C tie is always present. The absence of the B-C tie, in this situation, would create, according to Granovetter, what is called the forbidden triad. In other words, the B-C tie, according to this logic, is always present, whether weak or strong, given the other two strong ties. In this direction, the \u0026ldquo;weak tie hypothesis\u0026rdquo; postulates that clumps or cliques of social structure will form, being bound predominately by ‚Äùstrong ties‚Äù, and that \u0026ldquo;weak ties\u0026rdquo; will function as the crucial bridge between any two densely knit clumps of close friends.\nIn our experiments, we only take into consideration of one hop relation and bidirectional strong ties. In other words, we only treat the relation of following each other as strong ties. Also, we don't further explore the nodes that have connections with B and C.\nGitPal system Data sets We obtain all the data from GHTorrent, which is a scalable, queryable, oÔ¨Ñine mirror of data oÔ¨Äered through the Github REST API. The schema of the data sets is shown in Figure 6. For the similicity, we only use the data in the time period of year 2010 to year 2013. The table is queried using Mysql and we extract the information from the query result to construct the social networks, then we perform our subsequent friendship determination as well as recommendations based on the networks.\nArchitecture We perform our approaches by using social network (follower network, user-repo network, etc.) and activity data from GitHub. The architecture of our system is shown in Figure 7. As can be seen from the diagram in Figure 7, the four evaluating metrics are extracted from the data set and normalized and composed to get the evaluation results. For the similipicity, we only use multiplication to combine the scores. In the future, we plan to add more evaluating cases to design a better composing methods of the 4 metrics.\nScreenshot of GitPal system is shown as follows (the social network is visualized via Gephi): Summary and Future perspectives In this project, we propose methods for \u0026ldquo;who to befriend\u0026rdquo; recommendations on GitHub and introduce the system we implement based on these methods. Our approach is based on social network analysis techniques and four heuristics are included to make the result more targeted at the online software development communities. Although it is specially designed for GitHub, the methods may be applied to other software communities and other types of social networks as well.\nFrom this course project, we learned and accomplished the procedure to build a complete and practical system. We obtained the insight that big data in social information is important not only in analysis but also in real-world applications.\nThis is a preliminary work and we still have a lot to improve in the future. In our future work, we plan to enhance our system from the following aspects:\n  Include larger data-sets to make our system more general;\n  Consider forbidden triad in evaluating common friends;\n  Optimize the performance of detection algorithm to meet online real-time demands;\n  Improve the composer of our system to make the results more sensible;\n  Find some ground-truth cases of friendships in GitHub to evaluate the accuracy of our results.\n  In the future, it is expected to see that our implementation will be integrated into GitHub, to improve recommendations of potential collaborators.\n","date":1576108800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1576108800,"objectID":"ab9639437c18176be32822b69eea01a0","permalink":"/post/friends/","publishdate":"2019-12-12T00:00:00Z","relpermalink":"/post/friends/","section":"post","summary":"Efficient determination of user relation in social networks","tags":["website","GitHub"],"title":"Are we friends? ","type":"post"},{"authors":null,"categories":null,"content":"Introdcution  Remove the voices of human from a stereo song and get pure music (the sound of the instrument). Audio format: mp3/wav Tool: MATLAB Keywords: sampling, FFT, filter, channel mixer, inversion and etc.  Background  Vocal elimination is a technique that eliminates the vocals of stereo songs. Vocal elimination is a simple DSP application.  Principles  Features of Stereo music: In stereo music, the instrument sound in the left and right channels is different in stereo music, especially the various instruments in the song are placed in the left and right channels; while the human voice is generally the same in both channels. In this course design, we mainly apply this property to achieve the effect of vocal elimination. Features of vocal: The sound image position of human voice is in the center of the entire sound field (balanced distribution of left and right channels); the sound frequency is concentrated in the middle and high frequency parts. We know that the instrument sound in the left and right channels is different in stereo music, especially the various instruments in the song are placed in the left and right channels, but the vocals in the two channels is exactly the same. Then, you can use this property to eliminate vocals.  ","date":1556323200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556323200,"objectID":"b76141b3f207f898a1b5deaf4f5db4dd","permalink":"/project/voice-elimination/","publishdate":"2019-04-27T00:00:00Z","relpermalink":"/project/voice-elimination/","section":"project","summary":"Vocal Elimination based on MatLab üéµ","tags":["MatLab","Other"],"title":"Vocal Elimination","type":"project"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let's make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Introduction Oracle bone inscriptions (OBIs) are some of the oldest characters of Chinese words, which were hieroglyphic signs inscribed onto cattle bones or turtle shells with sharp objects about 3000 years ago. OBIs are very important to exploit the political systems, economic status and social lives of Shang Dynasty (about 1600 B.C. -1046 B.C.), the Ô¨Årst dynasty recorded by Chinese words found so far. However, few people have the literacy of OBIs. The recognition of OBIs, which interdisciplinarily combines archaeology, history, philology and literature, requires people to have plenty of knowledge and years of experiences.\nData set Models  CNN: We adapt AlexNet, altering its kernel sizes, paddings, numbers of channels, and strides, for this task. SIFT/SURF: We adopt two methods for scale and rotation invariant interest point/feature detector and descriptor: Scale Invariant Feature Transform (SIFT) and Speed Up Robust Features (SURF). After extracting features, we perform a quick and efÔ¨Åcient matching by using the FLANN (Fast Approximate Nearest Neighbor Search Library). Template matching is a technique for Ô¨Ånding areas of an image that match (are similar) to a template image (patch). Template matching works by \u0026ldquo;sliding\u0026rdquo; the template across the original image. As it slides, it compares or matches the template to the portion of the image directly under it.  Experiment Results: Real Scence Tests: ","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"f8f53268d36e32d25479db44694b4c13","permalink":"/project/oracle-bone/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/oracle-bone/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Oracle Bone Character Recognition","type":"project"}]